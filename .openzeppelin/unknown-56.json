{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x8B80A8701A339620d45e47762B1568b9c3Ac3A17",
      "txHash": "0x90d492df9c318c6e08d196ddbfc856095c347b41de8d12df3cf493b36d288b3e",
      "kind": "uups"
    }
  ],
  "impls": {
    "cea483df36530a6b1e80b7c54f3a58095c83ac9fa4e3f1e395e89943b8b3f8e8": {
      "address": "0xcbDF0bA9D2546F93321D670392bd6a4eC351468d",
      "txHash": "0x8bf2af00e6a66da63ece8e0a3ca98f3b4e084980122ba961efc998487e555279",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)2499_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "harvestLog",
            "type": "t_array(t_struct(Harvest)5598_storage)dyn_storage",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:30"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "harvestLogCadence",
            "type": "t_uint256",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:31"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "lastHarvestTimestamp",
            "type": "t_uint256",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:32"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "upgradeProposalTime",
            "type": "t_uint256",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:34"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "cascadingAccess",
            "type": "t_array(t_bytes32)dyn_storage",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:54"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "treasury",
            "type": "t_address",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:61"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "vault",
            "type": "t_address",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:62"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "totalFee",
            "type": "t_uint256",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:81"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "securityFee",
            "type": "t_uint256",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:82"
          },
          {
            "contract": "ReaperBaseStrategyv3",
            "label": "feeOnWithdrawAddresses",
            "type": "t_struct(AddressSet)2499_storage",
            "src": "contracts\\abstract\\ReaperBaseStrategyv3.sol:87"
          },
          {
            "contract": "ReaperStrategyTHENA",
            "label": "gauge",
            "type": "t_address",
            "src": "contracts\\ReaperStrategyThena.sol:28"
          },
          {
            "contract": "ReaperStrategyTHENA",
            "label": "want",
            "type": "t_address",
            "src": "contracts\\ReaperStrategyThena.sol:29"
          },
          {
            "contract": "ReaperStrategyTHENA",
            "label": "lpToken0",
            "type": "t_address",
            "src": "contracts\\ReaperStrategyThena.sol:30"
          },
          {
            "contract": "ReaperStrategyTHENA",
            "label": "lpToken1",
            "type": "t_address",
            "src": "contracts\\ReaperStrategyThena.sol:31"
          },
          {
            "contract": "ReaperStrategyTHENA",
            "label": "relay",
            "type": "t_address",
            "src": "contracts\\ReaperStrategyThena.sol:32"
          },
          {
            "contract": "ReaperStrategyTHENA",
            "label": "rewards",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\ReaperStrategyThena.sol:38"
          },
          {
            "contract": "ReaperStrategyTHENA",
            "label": "THEToRelayPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\ReaperStrategyThena.sol:39"
          },
          {
            "contract": "ReaperStrategyTHENA",
            "label": "THEToBUSDPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\ReaperStrategyThena.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_struct(Harvest)5598_storage)dyn_storage": {
            "label": "struct ReaperBaseStrategyv3.Harvest[]"
          },
          "t_struct(Harvest)5598_storage": {
            "label": "struct ReaperBaseStrategyv3.Harvest",
            "members": [
              {
                "label": "timestamp",
                "type": "t_uint256"
              },
              {
                "label": "vaultSharePrice",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)2499_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2198_storage"
              }
            ]
          },
          "t_struct(Set)2198_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)2499_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
